# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"DIRP_PSEUDO_COLOR_WHITEHOT": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_FULGURITE": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_IRONRED": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_HOTIRON": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_MEDICAL": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_ARCTIC": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_RAINBOW1": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_RAINBOW2": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_TINT": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_BLACKHOT": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_NUM": "00_core_dji.ipynb",
         "DIRP_PSEUDO_COLOR_LUT_DEPTH": "00_core_dji.ipynb",
         "DIRP_SUCCESS": "00_core_dji.ipynb",
         "DIRP_ERROR_MALLOC": "00_core_dji.ipynb",
         "DIRP_ERROR_POINTER_NULL": "00_core_dji.ipynb",
         "DIRP_ERROR_INVALID_PARAMS": "00_core_dji.ipynb",
         "DIRP_ERROR_INVALID_RAW": "00_core_dji.ipynb",
         "DIRP_ERROR_INVALID_HEADER": "00_core_dji.ipynb",
         "DIRP_ERROR_INVALID_CURVE": "00_core_dji.ipynb",
         "DIRP_ERROR_RJPEG_PARSE": "00_core_dji.ipynb",
         "DIRP_ERROR_SIZE": "00_core_dji.ipynb",
         "DIRP_ERROR_INVALID_HANDLE": "00_core_dji.ipynb",
         "DIRP_ERROR_FORMAT_INPUT": "00_core_dji.ipynb",
         "DIRP_ERROR_FORMAT_OUTPUT": "00_core_dji.ipynb",
         "DIRP_ERROR_UNSUPPORTED_FUNC": "00_core_dji.ipynb",
         "DIRP_ERROR_NOT_READY": "00_core_dji.ipynb",
         "DIRP_ERROR_ACTIVATION": "00_core_dji.ipynb",
         "DIRP_ERROR_INVALID_INI": "00_core_dji.ipynb",
         "DIRP_ERROR_INVALID_SUB_DLL": "00_core_dji.ipynb",
         "DIRP_ERROR_ADVANCED": "00_core_dji.ipynb",
         "DIRP_HANDLE": "00_core_dji.ipynb",
         "dirp_api_version_t": "00_core_dji.ipynb",
         "dirp_color_bar_t": "00_core_dji.ipynb",
         "dirp_enhancement_params_t": "00_core_dji.ipynb",
         "dirp_isotherm_t": "00_core_dji.ipynb",
         "dirp_isp_pseudo_color_lut_t": "00_core_dji.ipynb",
         "dirp_measurement_params_range_t": "00_core_dji.ipynb",
         "dirp_measurement_params_t": "00_core_dji.ipynb",
         "dirp_resolution_t": "00_core_dji.ipynb",
         "dirp_rjpeg_version_t": "00_core_dji.ipynb",
         "set_dirp_dll": "00_core_dji.ipynb",
         "dirp_create_from_rjpeg": "00_core_dji.ipynb",
         "dirp_destroy": "00_core_dji.ipynb",
         "dirp_get_api_version": "00_core_dji.ipynb",
         "dirp_get_color_bar": "00_core_dji.ipynb",
         "dirp_get_color_bar_adaptive_params": "00_core_dji.ipynb",
         "dirp_get_enhancement_params": "00_core_dji.ipynb",
         "dirp_get_isotherm": "00_core_dji.ipynb",
         "dirp_get_measurement_params": "00_core_dji.ipynb",
         "dirp_get_measurement_params_range": "00_core_dji.ipynb",
         "dirp_get_original_raw": "00_core_dji.ipynb",
         "dirp_get_pseudo_color": "00_core_dji.ipynb",
         "dirp_get_pseudo_color_lut": "00_core_dji.ipynb",
         "dirp_get_rjpeg_resolution": "00_core_dji.ipynb",
         "dirp_get_rjpeg_version": "00_core_dji.ipynb",
         "dirp_measure": "00_core_dji.ipynb",
         "dirp_measure_ex": "00_core_dji.ipynb",
         "dirp_process": "00_core_dji.ipynb",
         "dirp_process_strech": "00_core_dji.ipynb",
         "dirp_set_color_bar": "00_core_dji.ipynb",
         "dirp_set_enhancement_params": "00_core_dji.ipynb",
         "dirp_set_isotherm": "00_core_dji.ipynb",
         "dirp_set_logger_file": "00_core_dji.ipynb",
         "dirp_set_measurement_params": "00_core_dji.ipynb",
         "dirp_set_pseudo_color": "00_core_dji.ipynb",
         "dirp_set_verbose_level": "00_core_dji.ipynb",
         "get_pseudo_color": "00_core_dji.ipynb",
         "LhtFile": "01_core_utility.ipynb",
         "FindFilesByExtension": "01_core_utility.ipynb"}

modules = ["dji_sdk.py",
           "utility.py"]

doc_url = "https://lyuhaitao.github.io/dji_thermal_sdk/"

git_url = "https://github.com/lyuhaitao/dji_thermal_sdk/tree/master/"

def custom_doc_links(name): return None
